<Window x:Class="WPF_Design.Views.RoomDesignWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        xmlns:converters="clr-namespace:WPF_Design.BusinessLogicLayer.Converters"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Title="RoomDesignWindow" Height="800" Width="1350" Name="room">

    <Window.Resources>
        <converters:SpecialPropertyNameConverter x:Key="specialPropertyNameConverter"/>
        <converters:SpecialPropertyConverter x:Key="specialPropertyConverter"/>
        <converters:VisibilityToHiddenConverter x:Key="visibilityToHiddenConverter"/>
        <xctk:ColorPicker x:Key="colorPicker" DisplayColorAndName="True"/>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Ellipse Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#6264A7"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#6264A7"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFB3D1D2"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FFB3D1D2"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="VerticalSeparatorStyle" TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Type Separator}}">
            <Setter Property="Margin" Value="10,0"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <TransformCollection>
                                <RotateTransform Angle="90"/>
                            </TransformCollection>
                        </TransformGroup.Children>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Window.Resources>

    <Grid Background="#7F608AA9" >

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="5*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>

        <Viewbox StretchDirection="Both" Grid.ColumnSpan="2" HorizontalAlignment="Left">
            <StackPanel Grid.Row="0" Orientation="Horizontal" Name="Buttons" Margin="5,0">
              
                <!--Open Button-->
                <Button Height="100" Width="70" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding OpenCommand}"
                    CommandParameter="{Binding RoomObjects}">
                    <StackPanel>
                        <Image Source="pack://application:,,,/WPF_Design;Component/Resources/filefolder.png" Height="60" Width="50"/>
                        <TextBlock Text="Open" TextAlignment="Center" FontSize="18"/>
                    </StackPanel>
                </Button>

                <!--New Button-->
                <Button Height="100" Width="70" Background="{x:Null}" BorderBrush="{x:Null}" Click="OpenSelectRoomWindow">
                    <StackPanel>
                        <Image Source="pack://application:,,,/WPF_Design;component/Resources/new.png" Height="60" Width="50"/>
                        <TextBlock Text="New" TextAlignment="Center" FontSize="18"/>
                    </StackPanel>
                </Button>

                <!--Save Button-->
                <Button Height="100" Width="70" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding SaveCommand}" 
                    CommandParameter="{Binding RoomObjects}">
                    <StackPanel>
                        <Image Source="pack://application:,,,/WPF_Design;Component/Resources/save.png" Height="60" Width="50"/>
                        <TextBlock Text="Save" TextAlignment="Center" FontSize="18"/>
                    </StackPanel>
                </Button>

                <Separator Style="{DynamicResource VerticalSeparatorStyle}"/>

                <!--Distance Button-->
                <Button Height="85" x:Name="distanceBtn" Width="75" Background="{x:Null}" BorderBrush="{x:Null}" Click="DistanceButtonClick">
                    <Button.ToolTip>
                        <ToolTip>
                            Right click on two different objects to see the distance between them
                        </ToolTip>
                    </Button.ToolTip>

                    <StackPanel>
                        <Image Source="pack://application:,,,/WPF_Design;component/Resources/distance.png" Height="60" Width="50"/>
                        <TextBlock Text="Distance" TextAlignment="Center" FontSize="18"/>
                    </StackPanel>
                </Button>

                <!--Trash Button-->
                <Button Height="100" Width="70" Background="{x:Null}" BorderBrush="{x:Null}" Margin="10,0,0,0"
                    Visibility="{Binding ButtonIsEnabled, Converter={StaticResource visibilityToHiddenConverter}}"
                    Command="{Binding DeleteCommand}" CommandParameter="{Binding SelectedObject}">
                    <StackPanel>
                        <Image Source="pack://application:,,,/WPF_Design;Component/Resources/trash.png" Height="60" Width="50"/>
                        <TextBlock Text="Delete" TextAlignment="Center" FontSize="18"/>
                    </StackPanel>
                </Button>

                <!--Rotate Button-->
                <Button Height="100" Width="70" Background="{x:Null}" BorderBrush="{x:Null}" 
                    Visibility="{Binding ButtonIsEnabled, Converter={StaticResource  visibilityToHiddenConverter}}"
                    Command="{Binding RotateCommand}" CommandParameter="{Binding SelectedObject}">
                    <StackPanel>
                        <Image Source="pack://application:,,,/WPF_Design;Component/Resources/rotate.png" Height="60" Width="50"/>
                        <TextBlock Text="Rotate" TextAlignment="Center" FontSize="18"/>
                    </StackPanel>
                </Button>

            </StackPanel>
        </Viewbox>

        <ScrollViewer Grid.Row="1" Grid.Column="0" PreviewMouseWheel="ListViewMouseScroll" >
            <Viewbox Stretch="UniformToFill" StretchDirection="Both" Grid.Column="0" Grid.Row="1">
                <ListView Width="300" x:Name="listView" Background="#19608AA9" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                          FontFamily="Verdana" FontSize="14" FontWeight="Bold" BorderBrush="Black" BorderThickness="2"   
                          ItemsSource="{Binding AvailableObjects}"
                          MouseMove="ListViewDragElement"
                          MouseLeftButtonUp="ListViewClick">

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="Black" BorderThickness="2" Width="270" Margin="5,0">
                                <StackPanel Orientation="Horizontal" MaxHeight="60">
                                    <Path StrokeThickness="2" Stroke="Black" Data="{Binding OriginalGeometry}" MaxHeight="60"
                                          Fill="{Binding Color}" Width="50" Height="50" Stretch="Fill" MaxWidth="60"/>
                                    <TextBlock Text="{Binding Name}" Margin="15,15,0,0" FontSize="16"/>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Viewbox>
        </ScrollViewer>

        <Viewbox Stretch="Uniform" StretchDirection="Both" Grid.Column="1" Grid.Row="1">
            <Canvas Height="540" Width="1050" ClipToBounds="True" x:Name="drawingArea" Grid.Column="1" Grid.Row="1"
                    Background="Azure" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AllowDrop="True"             
                    PreviewMouseLeftButtonDown="DrawingAreaClick"
                    Drop="DrawingAreaDropElementFromListView"
                    MouseRightButtonDown="DrawingAreaMeasureDistance">

                <ItemsControl ItemsSource="{Binding RoomObjects.AddedObjects, Mode=TwoWay}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Path StrokeThickness="2" Stroke="Black" Data="{Binding OriginalGeometry}" Fill="{Binding Color}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <EventSetter Event="MouseDown" Handler="DrawingAreaDragObject"/>
                            <EventSetter Event="MouseMove" Handler="DrawingAreaMoveObject"/>
                            <EventSetter Event="MouseUp" Handler="DrawingAreaDropObject"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>

                <ItemsControl ItemsSource="{Binding RoomObjects.AuxiliaryObjects}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Path StrokeThickness="2" Stroke="Black" Data="{Binding OriginalGeometry}" Fill="{Binding Color}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </Canvas>
        </Viewbox>

        <Viewbox StretchDirection="Both" Grid.ColumnSpan="2" Grid.Row="2">

            <WrapPanel Orientation="Horizontal" Background="#7F608AA9" Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                <WrapPanel Orientation="Vertical" Visibility="{Binding IsObjectSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label Content="Properties:" Width="180" FontSize="18" FontWeight="Bold" HorizontalAlignment="Left"/>

                    <WrapPanel Orientation="Horizontal">
                        <Label Content="Name:" Width="140" FontSize="18" FontWeight="Bold"/>

                        <Label Content="{Binding Path=SelectedObject.Name}" Width="180" 
                               FontSize="18"/>
                    </WrapPanel>

                    <WrapPanel Orientation="Horizontal">
                        <Label Content="Description:" Width="140" FontSize="18" FontWeight="Bold"/>

                        <Label Content="{Binding Path=SelectedObject.Description}" Width="180" 
                               FontSize="18"/>
                    </WrapPanel>

                    <WrapPanel Orientation="Horizontal">
                        <Label Content="{Binding Path=SelectedObject, Converter={StaticResource specialPropertyNameConverter}}" 
                               Width="140" FontSize="18" FontWeight="Bold"/>

                        <Label Content="{Binding Path=SelectedObject, Converter={StaticResource specialPropertyConverter}}" 
                               Width="180" FontSize="18"/>
                    </WrapPanel>

                </WrapPanel>

                <WrapPanel Orientation="Vertical" Margin="70,30,0,0"
                           Visibility="{Binding IsObjectSelected, Converter={StaticResource BooleanToVisibilityConverter}}" >

                    <WrapPanel Orientation="Horizontal" Visibility="{Binding Visibility}">
                        <Label Content="Color:" Width="100" FontSize="18" FontWeight="Bold"/>

                        <xctk:ColorPicker SelectedColor="{Binding Path=SelectedObject.Color}"
                              MinWidth="100" Width="Auto" FontSize="18" Height="24"/>
                    </WrapPanel>

                    <WrapPanel Orientation="Horizontal" Visibility="{Binding Visibility}">
                        <Label Content="Width:" Width="100" FontSize="18" FontWeight="Bold"/>

                        <TextBox Text="{Binding Path=SelectedObject.Width}" 
                             MinWidth="100" Width="Auto" FontSize="18" Height="24"/>

                        <Button Width="28" Height="27">
                            <Image Source="pack://application:,,,/WPF_Design;component/Resources/edit.png" Height="24" Width="24"/>
                        </Button>
                    </WrapPanel>

                    <WrapPanel Orientation="Horizontal" Visibility="{Binding Visibility}">
                        <Label Content="Height:" Width="100" FontSize="18" FontWeight="Bold"/>

                        <TextBox Text="{Binding Path=SelectedObject.Height}" 
                             MinWidth="100" Width="Auto" FontSize="18" Height="24"/>
                        
                        <Button Width="28" Height="27">
                            <Image Source="pack://application:,,,/WPF_Design;component/Resources/edit.png" Height="24" Width="24"/>
                        </Button>
                    </WrapPanel>

                </WrapPanel>

                <WrapPanel Orientation="Vertical" Margin="120,30,0,0" 
                           Visibility="{Binding IsObjectSelected, Converter={StaticResource BooleanToVisibilityConverter}}" >

                    <WrapPanel Orientation="Horizontal" Visibility="{Binding Visibility}">
                        <Label Content="Coordinate X:" Width="180" FontSize="18" FontWeight="Bold"/>

                        <Label Content="{Binding SelectedObject.CoordinateX}" ContentStringFormat=" {0:F2}"
                             MinWidth="80" Width="Auto" FontSize="18"/>
                    </WrapPanel>

                    <WrapPanel Orientation="Horizontal" Visibility="{Binding Visibility}">
                        <Label Content="Coordinate Y:" Width="180" FontSize="18" FontWeight="Bold"/>

                        <Label Content="{Binding SelectedObject.CoordinateY}" ContentStringFormat=" {0:F2}"
                             MinWidth="80" Width="Auto" FontSize="18"/>
                    </WrapPanel>

                    <WrapPanel Orientation="Horizontal" Visibility="{Binding Visibility}">
                        <Label Content="Rotation angle:" Width="180" FontSize="18" FontWeight="Bold"/>

                        <Label Content="{Binding SelectedObject.Angle}" ContentStringFormat=" {0:F2}°"
                             MinWidth="80" Width="Auto" FontSize="18" />
                    </WrapPanel>

                </WrapPanel>

            </WrapPanel>
        </Viewbox>

    </Grid>

</Window>
